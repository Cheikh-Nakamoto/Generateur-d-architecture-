jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        run: rustup update stable && rustup default stable
        
      - name: Add Windows target
        if: matrix.os == 'windows-latest'
        run: rustup target add x86_64-pc-windows-msvc
        
      - name: Build
        run: cargo build --release

      - name: Rename Binary (Linux & macOS)
        if: matrix.os != 'windows-latest'
        run: mv target/release/projet-structure-generator target/release/projet-structure-generator-${{ matrix.os }}

      - name: Rename Binary (Windows)
        if: matrix.os == 'windows-latest'
        run: mv target/release/projet-structure-generator.exe target/release/projet-structure-generator-windows.exe

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-projet-structure-generator
          path: |
            target/release/projet-structure-generator-${{ matrix.os }}
            target/release/projet-structure-generator-windows.exe
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release Directory
        run: mkdir -p release/linux release/windows release/macos
      
      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-projet-structure-generator
          path: release/linux
      
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-projet-structure-generator
          path: release/windows

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-latest-projet-structure-generator
          path: release/macos
          
      - name: Generate Release Tag
        run: echo "TAG_NAME=v$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/linux/projet-structure-generator-ubuntu-latest
            release/windows/projet-structure-generator-windows.exe
            release/macos/projet-structure-generator-macos-latest
          tag_name: ${{ env.TAG_NAME }}
          body: |
            Release of projet-structure-generator
            - Linux, Windows, and macOS binaries included
        env:
          GITHUB_TOKEN: ${{ secrets.REALEASE_TOKEN }}